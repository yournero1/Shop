{"ast":null,"code":"import vCatalogItemVue from './v-catalog-item.vue';\nimport { mapActions, mapGetters } from 'vuex';\nimport vSelectVue from '../v-select.vue';\nexport default {\n  name: 'v-catalog',\n  components: {\n    vCatalogItemVue,\n    vSelectVue\n  },\n  props: {},\n  data() {\n    return {\n      categories: [{\n        name: 'Все',\n        value: 'ВСЕ'\n      }, {\n        name: 'Мужские',\n        value: 'M'\n      }, {\n        name: 'Женские',\n        value: 'Ж'\n      }],\n      selected: 'Все',\n      sortedProducts: [],\n      minPrice: 0,\n      maxPrice: 10000\n    };\n  },\n  computed: {\n    ...mapGetters(['PRODUCTS', 'CART', 'IS_MOBILE', 'IS_DESKTOP', 'SEARCH_VALUE']),\n    filteredProducts() {\n      if (this.sortedProducts.length) {\n        return this.sortedProducts;\n      } else {\n        return this.PRODUCTS;\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['GET_PRODUCTS_FROM_API', 'ADD_TO_CART']),\n    setRangeSlider() {\n      if (this.minPrice > this.maxPrice) {\n        let temp = this.maxPrice;\n        this.maxPrice = this.minPrice;\n        this.minPrice = temp;\n      }\n      this.sortByCategories(this.selected);\n    },\n    sortByCategories(val = 'Все') {\n      this.selected = val;\n      this.sortedProducts = [...this.PRODUCTS].filter(item => {\n        return item.price >= this.minPrice && item.price <= this.maxPrice;\n      });\n      console.log(this.sortedProducts);\n      if (val !== 'Все') this.sortedProducts = this.sortedProducts.filter(item => {\n        return item.category === val;\n      });\n    },\n    addToCart(data) {\n      this.ADD_TO_CART(data);\n    },\n    sortProductsBySearchValue(value) {\n      if (value) {\n        this.sortedProducts = this.sortedProducts.filter(function (item) {\n          return item.name.toLowerCase().includes(value.toLowerCase());\n        });\n      } else {\n        this.sortedProducts = this.PRODUCTS;\n      }\n    }\n  },\n  watch: {\n    SEARCH_VALUE() {\n      this.sortProductsBySearchValue(this.SEARCH_VALUE); //когда значение в поисковой строке будет меняться вызываем эту функцию\n    }\n  },\n\n  mounted() {\n    this.GET_PRODUCTS_FROM_API();\n    this.sortByCategories('Все');\n  }\n};","map":{"version":3,"mappings":"AA2BA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;EACAC;IACA;MACAC,aACA;QAAAN;QAAAO;MAAA,GACA;QAAAP;QAAAO;MAAA,GACA;QAAAP;QAAAO;MAAA,EACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA,eACA,YACA,QACA,aACA,cACA,eACA;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;EACA;EACAC;IACA,eACA,yBACA,cACA;IACAC;MACA;QACA;QACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;MACAC;MACA;QACA;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;QACA;UACA;QACA;MACA;QACA;MACA;IAEA;EAEA;EACAC;IACAC;MACA;IACA;EACA;;EACAC;IACA;IACA;EACA;AACA","names":["name","components","vCatalogItemVue","vSelectVue","props","data","categories","value","selected","sortedProducts","minPrice","maxPrice","computed","filteredProducts","methods","setRangeSlider","sortByCategories","console","addToCart","sortProductsBySearchValue","watch","SEARCH_VALUE","mounted"],"sourceRoot":"src/components/catalog","sources":["v-catalog.vue"],"sourcesContent":["<template>\n  <div class=\"v-catalog\">\n    <router-link :to=\"{ name: 'cart', params: { cart_data: CART } }\">\n      <div class=\"v-catalog__link_to_cart\">Корзина: {{ CART.length }}</div>\n    </router-link>\n\n    <h1>Каталог</h1>\n    <div class=\"filters\">\n      <vSelectVue :selected=\"selected\" :options=\"categories\" @select=\"sortByCategories\" :isExpanded=\"IS_DESKTOP\" />\n      <div class=\"range-slider\">\n        <input type=\"range\" min=\"0\" max=\"10000\" step=\"1000\" v-model.number=\"minPrice\" @change=\"setRangeSlider\">\n        <input type=\"range\" min=\"0\" max=\"10000\" step=\"1000\" v-model.number=\"maxPrice\" @change=\"setRangeSlider\">\n      </div>\n      <div class=\"range-values\">\n        <p>Мин:{{ minPrice }}</p>\n        <p>Макс:{{ maxPrice }}</p>\n      </div>\n    </div>\n\n\n    <div class=\"v-catalog__list\">\n      <vCatalogItemVue v-for=\"product in filteredProducts\" :key=\"product.article\" :product_data=\"product\"\n        @addToCart=\"addToCart\" />\n    </div>\n  </div>\n</template>\n<script>\nimport vCatalogItemVue from './v-catalog-item.vue';\nimport { mapActions, mapGetters } from 'vuex';\nimport vSelectVue from '../v-select.vue';\n\nexport default {\n  name: 'v-catalog',\n  components: {\n    vCatalogItemVue,\n    vSelectVue\n  },\n  props: {},\n  data() {\n    return {\n      categories: [\n        { name: 'Все', value: 'ВСЕ' },\n        { name: 'Мужские', value: 'M' },\n        { name: 'Женские', value: 'Ж' },\n      ],\n      selected: 'Все',\n      sortedProducts: [],\n      minPrice: 0,\n      maxPrice: 10000,\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'PRODUCTS',\n      'CART',\n      'IS_MOBILE',\n      'IS_DESKTOP',\n      'SEARCH_VALUE'\n    ]),\n    filteredProducts() {\n      if (this.sortedProducts.length) {\n        return this.sortedProducts\n      } else {\n        return this.PRODUCTS\n      }\n    },\n  },\n  methods: {\n    ...mapActions([\n      'GET_PRODUCTS_FROM_API',\n      'ADD_TO_CART'\n    ]),\n    setRangeSlider() {\n      if (this.minPrice > this.maxPrice) {\n        let temp = this.maxPrice;\n        this.maxPrice = this.minPrice;\n        this.minPrice = temp\n      }\n      this.sortByCategories(this.selected)\n    },\n    sortByCategories(val = 'Все') {\n      this.selected = val\n      this.sortedProducts = [...this.PRODUCTS].filter((item) => {\n        return item.price >= this.minPrice && item.price <= this.maxPrice\n      })\n      console.log(this.sortedProducts)\n      if (val !== 'Все') this.sortedProducts = this.sortedProducts.filter((item) => {\n        return item.category === val\n      })\n    },\n\n    addToCart(data) {\n      this.ADD_TO_CART(data)\n    },\n\n    sortProductsBySearchValue(value) {\n      if (value){\n        this.sortedProducts = this.sortedProducts.filter(function (item){\n        return item.name.toLowerCase().includes(value.toLowerCase())\n      })\n      } else {\n        this.sortedProducts = this.PRODUCTS;\n      }\n      \n    }\n\n  },\n  watch: {\n    SEARCH_VALUE(){\n      this.sortProductsBySearchValue(this.SEARCH_VALUE)//когда значение в поисковой строке будет меняться вызываем эту функцию\n    }\n  },\n  mounted() {\n    this.GET_PRODUCTS_FROM_API()\n    this.sortByCategories('Все')\n  }\n}\n</script>\n<style lang=\"scss\">\n.v-catalog {\n  &__list {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  &__link_to_cart {\n    position: absolute;\n    top: 80px;\n    right: 10px;\n    padding: $padding*2;\n    border: solid 1px grey;\n  }\n}\n\n.filters {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.range-slider {\n  width: 200px;\n  margin: auto 16px;\n  text-align: center;\n  position: relative;\n}\n\n.range-slider svg,\n.range-slider input[type=range] {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n}\n\ninput[type=range]::-webkit-slider-thumb {\n  z-index: 2;\n  position: relative;\n  top: 2px;\n  margin-top: -7px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}